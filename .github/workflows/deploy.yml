name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Setup Node.js ⚙️
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Dependencies 📦
        run: |
          npm install --legacy-peer-deps
          npm install -g expo-cli

      - name: Display App Version 📋
        run: |
          VERSION=$(node -e "console.log(require('./package.json').version)")
          echo "Building app version: $VERSION"
          
      - name: Fix NativeWind 🔧
        run: |
          npm run fix-nativewind
          
      - name: Build Web 🔨
        env:
          CI: false
          PUBLIC_URL: /self-fit
          NODE_OPTIONS: --max-old-space-size=4096
        run: |
          # 檢查 postcss.config.js 和 webpack.config.js 是否存在
          if [ ! -f "postcss.config.js" ]; then
            echo "Creating missing postcss.config.js"
            cat > postcss.config.js << 'EOL'
module.exports = {
  plugins: {
    'nativewind/postcss': {
      async: true,
    },
    tailwindcss: {},
    autoprefixer: {},
  },
};
EOL
          fi

          # 使用 npm 腳本構建
          echo "開始構建 Web 版本..."
          npm run build:web || (echo "構建失敗，嘗試直接使用 expo export:web 命令" && CI=false PUBLIC_URL=/self-fit expo export:web)
          
          # 檢查構建結果
          if [ ! -d "web-build" ]; then
            echo "web-build 目錄不存在，嘗試使用備用構建方式"
            NODE_OPTIONS=--max-old-space-size=8192 CI=false PUBLIC_URL=/self-fit expo export --platform web
          fi

      - name: Check Web Build Directory 🔍
        run: |
          if [ ! -d "web-build" ] || [ ! -f "web-build/index.html" ]; then
            echo "Web build failed or directory is missing!"
            ls -la
            exit 1
          else
            echo "Web build successful!"
            ls -la web-build/
          fi

      - name: Add Version to Web Build 🏷️
        run: |
          VERSION=$(node -e "console.log(require('./package.json').version)")
          # 添加版本號到 index.html
          sed -i "s|</head>|<meta name=\"app-version\" content=\"$VERSION\" />\n<script>window.APP_VERSION = '$VERSION';</script>\n</head>|" web-build/index.html
          echo "Added version $VERSION to web build"

      - name: Setup GitHub Pages Configuration 🧰
        run: |
          # Create a 404.html file for SPA routing
          cp web-build/index.html web-build/404.html
          
          # Add SPA routing script to index.html
          cat <<EOT >> web-build/index.html
          <script type="text/javascript">
            (function(l) {
              if (l.search[1] === '/' ) {
                var decoded = l.search.slice(1).split('&').map(function(s) { 
                  return s.replace(/~and~/g, '&')
                }).join('?');
                window.history.replaceState(null, null,
                    l.pathname.slice(0, -1) + decoded + l.hash
                );
              }
            }(window.location))
          </script>
          EOT

      - name: Deploy to GitHub Pages 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: web-build
          clean: true
